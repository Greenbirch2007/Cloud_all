VPS下CentOS里搭建shadowsocks全攻略
首先介绍几个不错的VPS产品：

DigitalOcean
搬瓦工
Linode
Linode的详细操作说明：

Linode账户在绑定信用卡激活后，就可以创建VPS了。值得说明的是，Linode的控制面板较为复杂，当然伴随而来的是功能也更强大。在“Linodes”里选择套餐，左下角选择机房位置，完成后可看到给你分配的IP以及主机名称，点击主机名称比如“123456”，然后点击“Deploy a Linux Distribution”，在“Distribution”里面选择“ CentOS 6.5 ”，在“Root Password”的方框里填入你的root密码，然后点击下方的“Deploy”按钮，大概1分钟左右就会创建完毕。点击“Dashboard”下的“Boot”按钮，你的VPS就开始启动了，启动完成后，就可以使用putty来操作你的VPS了，默认SSH端口为22。

下面的命令，需要一行一行的执行，每输入一行命令，回车执行，如果没有报错，即为执行成功，出现确认提示的时候，输入 y 后，回车即可（每行命令可以复制后在putty里右键粘贴，回车执行）

#yum install epel-release 

#yum update 

#yum install python-setuptools m2crypto supervisor 

#easy_install pip 

#pip install shadowsocks

#vi /etc/shadowsocks.json

此时按 i 键进入编辑模式，putty黑框的左下角会出现 – INSERT – 字样，然后一次性复制下面的内容（复制之前记得修改8388和yourpassword为你自己的端口号和密码，此端口号不是你的SSH端口号，而是你在手机或电脑上的shadowsocks客户端连接VPS上搭建的服务端的端口号，范围 1 - 65535 ，只要不和现有的端口号如SSH端口冲突都可以，记下你修改的端口号和密码，待会儿在配置手机和电脑的客户端时还要用到），在putty里右键，此时复制的内容应该已经粘贴到了putty里

———-以下内容为复制内容———-

{
    "server":"0.0.0.0",
    "server_port":8388,
    "local_port":1080,
    "password":"yourpassword",
    "timeout":600,
    "method":"aes-256-cfb"
}
———-以上内容为复制内容———-

复制完成后，按 Esc 键退出编辑模式，此时putty黑框左下角的 – INSERT – 字样消失，按下 : 键，输入 wq 后回车，此时文件保存完毕并退出了vi编辑器。（“ : ”的输入方法为“Shift+字母L右侧的分号键”）

继续执行命令

#vi /etc/supervisord.conf

此时你应该能看到很多英文内容，按 i 键再次进入编辑模式，putty黑框的左下角会出现 – INSERT – 字样，用方向键将光标调整至文件尾部的空行处，然后一次性复制下面的内容，在putty里右键，此时复制的内容应该已经粘贴到了putty里

———-以下内容为复制内容———-

[program:shadowsocks]
command=ssserver -c /etc/shadowsocks.json
autostart=true
autorestart=true
user=root
log_stderr=true
logfile=/var/log/shadowsocks.log
———以上内容为复制内容———

复制完成后，按下回车键给文件尾部留出空行，然后按 Esc 键退出编辑模式，此时putty黑框左下角的 – INSERT – 字样消失，按下 : 键，输入 wq 后回车，此时文件保存完毕并退出了vi编辑器。

继续执行命令

#echo “service supervisord start” >> /etc/rc.local

将该命令加入到文件末尾

最后执行命令

#reboot

此时，你的VPS重新启动，服务端已经完全配置完毕，putty会弹出一个连接已断开的提示框，关闭即可(不是报错)。

至此，shadowsocks的服务端已经部署完成。剩下的就是下载客户端安装到你的手机和电脑上，记得修改客户端的相关设置保持和你的服务端参数一致。






4.启动shadowsocks
#启动
ssserver -c /etc/shadowsocks.json -d start
#停止
ssserver -c /etc/shadowsocks.json -d stop
#重启
ssserver -c /etc/shadowsocks.json -d restart

启动成功即可通过ss客户端使用。
在window端可以在控制台通过以下命令查看端口是否打开
telnet {ip} {port}

5.配置自启动
新建启动脚本文件/etc/systemd/system/shadowsocks.service，内容如下：
[Unit]
Description=Shadowsocks


[Service]
TimeoutStartSec=0
ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json


[Install]
WantedBy=multi-user.target

通过以下命令注册，启动服务
$ systemctl enable shadowsocks
$ systemctl start shadowsocks

启动后可以查看服务状态
$ systemctl status shadowsocks -l

若启动成功：
● shadowsocks.service - Shadowsocks
   Loaded: loaded (/etc/systemd/system/shadowsocks.service; enabled; vendor preset: disabled)
   Active: active (running) since Sun 2017-08-13 18:03:41 CST; 1h 29min ago
 Main PID: 9567 (ssserver)
   CGroup: /system.slice/shadowsocks.service
           └—9567 /usr/bin/python2 /usr/bin/ssserver -c /etc/shadowsocks.json

如果，服务失败，重启服务器试一下



小提示：Shadowsocks支持一个账户在多个终端同时使用，一般人没有配置多账户的必要。所以如果你看不懂，那你还是别折腾了。

{
    "server":"0.0.0.0",
    "port_password":{
        "8388":"password1",
        "8389":"password2",
        "8390":"password3",
        "8391":"password4"
    },
    "timeout":300,
    "method":"aes-256-cfb"
}